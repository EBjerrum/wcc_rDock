# Docker info: https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/

# Possible minimise install: https://www.dajobe.org/blog/2015/04/18/making-debian-docker-images-smaller/
# Layering RUN instructions and generating commits conforms to commits are cheap and containers
# can be created from any point in an images history.

# See latest tag at: 
# http://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html
# https://github.com/jupyter/docker-stacks/commits/master/scipy-notebook/Dockerfile
# http://jupyter-docker-stacks.readthedocs.io/en/latest/
# https://hub.docker.com/r/jupyter/scipy-notebook/
FROM jupyter/scipy-notebook:4ebeb1f2d154

# Set root
USER root

# Initial update
RUN apt-get update

# General packages.
ENV BUILD_PACKAGES="htop curl wget unzip git nano"

# Build packages for rDock.
# packages before compiling and running rDock:
# gcc and g++ compilers version > 3.3, make, cppunit and cppunit-devel, popt and popt-devel.
ENV BUILD_PACKAGES="$BUILD_PACKAGES csh gcc g++ make libcppunit-dev libpopt-dev"

# Install
RUN echo "Installing these packages" $BUILD_PACKAGES

# Install all packages in 1 RUN
RUN apt-get update && \
    apt-get install --no-install-recommends -y $BUILD_PACKAGES && \
    rm -rf /var/lib/apt/lists/*

# Set variables    
#ENV NB_USER jovyan
# Set user back
USER ${NB_USER}